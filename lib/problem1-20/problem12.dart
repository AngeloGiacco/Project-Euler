/* Problem 12: Highly divisible triangular number

 The sequence of triangle numbers is generated by adding the natural numbers.
 So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The
 first ten terms would be:

     1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

 Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
     10: 1,2,5,10
     15: 1,3,5,15
     21: 1,3,7,21
     28: 1,2,4,7,14,28

 We can see that 28 is the first triangle number to have over five divisors.

 What is the value of the first triangle number to have over five hundred
 divisors?
 */
library euler.problem12;

import 'dart:math';

class TriangleNumber {
  num value, n;

  TriangleNumber(this.value, this.n);

  int get_value() => this.value;

  TriangleNumber find_next() {
    return new TriangleNumber(this.value + this.n + 1, this.n + 1);
  }
}

List factors(num n) {
  var factorsArr = [];
  factorsArr.add(n);
  factorsArr.add(1);
  for (var test = n - 1; test >= sqrt(n).toInt(); test--)
    if (n % test == 0) {
      factorsArr.add(test);
      factorsArr.add(n / test);
    }
  return factorsArr;
}

void main() {
  var m = TriangleNumber(1, 1);
  while (true) {
    m = m.find_next();
    if (factors(m.get_value()).length > 500) {
      print(m.get_value());
      break;
    }
  }
}
