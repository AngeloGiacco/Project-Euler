/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million
find the sum of the even-valued terms. */
library euler.problem2;

class Fibonnaci {
  int value, prev;

  Fibonnaci(this.value, this.prev);

  int get_value() {
    return value;
  }

  Fibonnaci find_next() {
    return new Fibonnaci(value + prev, value);
  }
}

void main(List<String> arguments) {
  //essentially every third element of the fibonacci series will be an even number
  int total = 0;
  var x = new Fibonnaci(2, 1);
  while (x.get_value() < 4000000) {
    total += x.get_value();
    x = x.find_next().find_next().find_next();
  }
  print(total);
}
